# terraform init
# terraform fm && terraform validate
# terraform plan
# terraform apply

# name: Deploy Infrastructure

on:
  workflow_dispatch:
    push:
      branches:
        - all
        # pull_request:
        #   branches:
        # - main
      # paths:
      #   - staging/**
    # inputs:
    #   terraform_operation:
    #     description: "Terraform operation: plan, apply, destroy"
    #     required: true
    #     default: "plan"
    #     type: choice
    #     options:
    #       - fmt
    #       - Init
    #       - Validate
    #       - plan
    #       - apply
    #       - destroy

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1

      # - name: Terraform Init
      #   uses: hashicorp/terraform-github-actions/init@v0.4.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     TF_ACTION_WORKING_DIR: "terraform"
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Terraform Validate
      #   uses: hashicorp/terraform-github-actions/validate@v0.3.7

      # - name: Terraform plan
      #   run: terraform plan
      #   if: "${{ github.event.inputs.terraform_operation == 'plan' }}"

      # - name: Terraform Apply
      #   uses: hashicorp/terraform-github-actions/apply@v0.4.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     TF_ACTION_WORKING_DIR: "terraform"
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Terraform destroy
      #   run: terraform destroy --auto-approve
      #   if: "${{ github.event.inputs.terraform_operation == 'destroy' }}"
